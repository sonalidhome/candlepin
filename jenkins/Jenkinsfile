library identifier: 'fh-pipeline-library@master', retriever: modernSCM(
  [$class: 'GitSCMSource',
   remote: 'https://github.com/feedhenry/fh-pipeline-library.git',
   credentialsId: 'github-api-token-as-username-password'])

pipeline {
    agent any
    options {
        skipDefaultCheckout true
    }
    stages {
        stage('Trust') {
            steps {
                echo  'hello'
                enforceTrustedApproval("sonalidhome/candlepin","sdhome-github-app")
            }
        }
        stage('Test') {
            parallel {
                stage('unit') {
                    // ensures that this stage will get assigned its own workspace
                    agent any
                    steps {
                        sh 'sudo chown -R jenkins:jenkins $WORKSPACE'
                        checkout scm
                        sh 'sh jenkins/unit-tests.sh'
                    }
                }
                stage('checkstyle') {
                    agent any
                    steps {
                        sh 'sudo chown -R jenkins:jenkins $WORKSPACE'
                        checkout scm
                        sh 'sh jenkins/lint.sh'
                    }
                }
                stage('rspec-postgresql') {
                    agent any
                    environment {
                        CANDLEPIN_DATABASE = 'postgresql'
                        CP_TEST_ARGS = '-r'
                    }
                    steps {
                        sh 'sudo chown -R jenkins:jenkins $WORKSPACE'
                        checkout scm
                        sh 'sh jenkins/rspec-tests.sh'
                    }
                }
                stage('rspec-mysql') {
                    agent any
                    environment {
                        CANDLEPIN_DATABASE = 'mysql'
                        CP_TEST_ARGS = '-r'
                    }
                    steps {
                        sh 'sudo chown -R jenkins:jenkins $WORKSPACE'
                        checkout scm
                        sh 'sh jenkins/rspec-tests.sh'
                    }
                }
                stage('rspec-postgres-hosted') {
                    agent any
                    environment {
                        CANDLEPIN_DATABASE = 'postgresql'
                        CP_TEST_ARGS = '-H'
                    }
                    steps {
                        sh 'sudo chown -R jenkins:jenkins $WORKSPACE'
                        checkout scm
                        sh 'sh jenkins/rspec-tests.sh'
                    }
                }
                stage('rspec-mysql-hosted') {
                    agent any
                    environment {
                        CANDLEPIN_DATABASE = 'mysql'
                        CP_TEST_ARGS = '-H'
                    }
                    steps {
                        sh 'sudo chown -R jenkins:jenkins $WORKSPACE'
                        checkout scm
                        sh 'sh jenkins/rspec-tests.sh'
                    }
                }
                stage('rspec-qpid') {
                    agent any
                    environment {
                        CANDLEPIN_DATABASE = 'postgresql'
                        CP_TEST_ARGS = '-q -r qpid_spec'
                    }
                    steps {
                        sh 'sudo chown -R jenkins:jenkins $WORKSPACE'
                        checkout scm
                        sh 'sh jenkins/rspec-tests.sh'
                    }
                }
                stage('bugzilla-reference') {
                    environment {
                        GITHUB_TOKEN = credentials('github-api-token-as-username-password')
                    }
                    steps {
                        sh 'sudo chown -R jenkins:jenkins $WORKSPACE'
                        checkout scm
                        sh 'python jenkins/check_pr_branch.py $CHANGE_ID'
                    }
                }
                stage('validate-translation') {
                    agent any
                    steps {
                        sh 'sudo chown -R jenkins:jenkins $WORKSPACE'
                        checkout scm
                        sh 'sh jenkins/candlepin-validate-text.sh'
                    }
                }
            }
        }
    }
}
